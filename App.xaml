<Application x:Class="PrzewodnikZlecen.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PrzewodnikZlecen"
             
             StartupUri="MainWindow.xaml"
         xmlns:zoomAndPan="clr-namespace:ZoomAndPan.Wpf;assembly=ZoomAndPan.Wpf"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
>
  
    <Application.Resources>
        

        <Style TargetType="{x:Type zoomAndPan:ZoomAndPanControl}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="#80C0C0C0" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type zoomAndPan:ZoomAndPanControl}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">

                                <!--
                                The ContentPresenter is used to scale and offset the content of ZoomAndPanControl.
                                
                                A transforms computed from 'ViewportZoom', 'ContentOffsetX' and 'ContentOffsetY' are assigned
                                to the 'RenderTransform' property in OnApplyTemplate in ZoomAndPanControl.cs.
                                
                                The alignment is set to top-left.  This allows the content offset to be used to place
                                the content in the center of the viewport when the viewport is bigger than the content.
                            -->
                                <ContentPresenter x:Name="PART_Content"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top" />

                            </Border>

                            <Canvas x:Name="PART_DragZoomCanvas"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Visibility="Collapsed">
                                <Border x:Name="PART_DragZoomBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="1" />
                            </Canvas>
                        </Grid>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type zoomAndPan:ZoomAndPanScrollViewer}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="#80C0C0C0" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type zoomAndPan:ZoomAndPanScrollViewer}">
                        <ScrollViewer x:Name="PART_ZoomAndPanScrollViewer"
                                  CanContentScroll="True"
                                  HorizontalScrollBarVisibility="Auto"
                                  VerticalScrollBarVisibility="Auto">
                            <zoomAndPan:ZoomAndPanControl x:Name="PART_ZoomAndPanControl"
                                                      Background="{TemplateBinding Background}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      MinimumZoomType="{TemplateBinding MinimumZoomType}"
                                                      MousePosition="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWayToSource, Path=MousePosition}"
                                                      UseAnimations="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Path=UseAnimations}"
                                                      ViewportZoom="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=ViewportZoom}"
                                                      ZoomAndPanInitialPosition="{TemplateBinding ZoomAndPanInitialPosition}">
                                <ContentPresenter HorizontalAlignment="Left"
                                              VerticalAlignment="Top"
                                              Content="{TemplateBinding Content}" />

                            </zoomAndPan:ZoomAndPanControl>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--
        Default style and template for the ZoomAndPanViewBox.
    -->
        <Style TargetType="{x:Type zoomAndPan:ZoomAndPanViewBox}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="#80C0C0C0" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type zoomAndPan:ZoomAndPanViewBox}">
                        <Viewbox>
                            <Canvas Name="PART_Content"
                                Width="{Binding Path=Content.ActualWidth}"
                                Height="{Binding Path=Content.ActualHeight}">
                                <Border Name="PART_DraggingBorder"
                                    Canvas.Left="{Binding Path=ZoomAndPanContent.ContentOffsetX, Mode=TwoWay}"
                                    Canvas.Top="{Binding Path=ZoomAndPanContent.ContentOffsetY, Mode=TwoWay}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="10"
                                    CornerRadius="1">
                                    <Border.Width>
                                        <MultiBinding Converter="{zoomAndPan:ZoomAndPanViewBoxClampConverter}"
                                                  ConverterParameter="width">
                                            <Binding Mode="OneWay" Path="ZoomAndPanContent.ContentViewportWidth" />
                                            <Binding Mode="OneWay" Path="ZoomAndPanContent.ContentOffsetX" />
                                            <Binding Mode="OneWay" Path="ZoomAndPanContent.ViewportZoom" />
                                            <Binding Path="ZoomAndPanContent" />
                                        </MultiBinding>
                                    </Border.Width>
                                    <Border.Height>
                                        <MultiBinding Converter="{zoomAndPan:ZoomAndPanViewBoxClampConverter}"
                                                  ConverterParameter="height">
                                            <Binding Mode="OneWay" Path="ZoomAndPanContent.ContentViewportHeight" />
                                            <Binding Mode="OneWay" Path="ZoomAndPanContent.ContentOffsetY" />
                                            <Binding Mode="OneWay" Path="ZoomAndPanContent.ViewportZoom" />
                                            <Binding Path="ZoomAndPanContent" />
                                        </MultiBinding>
                                    </Border.Height>
                                </Border>
                                <Border Name="PART_SizingBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="10"
                                    CornerRadius="1"
                                    Visibility="Hidden" />
                            </Canvas>
                        </Viewbox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>










        <!--// Toggle Button Style Template //-->
        <ImageBrush x:Key="tb_mouse_overBc"
                    ImageSource="Ikony/rtl_clk.png"/>
        <ImageBrush x:Key="tb_mouse_overB"
                    ImageSource="Ikony/rtl_c.png"/>
        <ImageBrush x:Key="tb_mouse_over"
                    ImageSource="Ikony/tgBtn_MouseOver.png"/>

        <!--// Text font style //-->

        <Style x:Key="font_style" TargetType="TextBlock">

            <Setter Property="FontFamily"
                    Value="Fonts/Roboto-Light.ttf #Roboto"/>

            <Setter Property="VerticalAlignment"
                    Value="Center"/>

            <Setter Property="HorizontalAlignment"
                    Value="Left"/>

            <Setter Property="Foreground"
                    Value="White"/>

            <Setter Property="FontSize"
                    Value="20"/>

        </Style>

        <!--// Tooltip Style Template //-->

        <Style TargetType="ToolTip" x:Key="tt_style">

            <Setter Property="Placement" Value="Right"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="20,0,0,0"/>
            <Setter Property="Background" Value="#4A5668"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Fonts/Roboto-Light.ttf #Roboto"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="PlacementRectangle" Value="60,0,0,0"/>
            <Setter Property="HorizontalOffset" Value="15"/>
            <Setter Property="VerticalOffset" Value="6"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>

        </Style>

        <!--// App Close Button Style Template //-->

        <ImageBrush x:Key="CloseBtn_MouseOver" ImageSource="Ikony/rtl_c.png"/>

        <Style x:Key="Close_btn" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="button"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">

                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver"
                                     Value="True">

                                <Setter Property="Background"
                                        TargetName="button"
                                        Value="{StaticResource CloseBtn_MouseOver}"/>

                            </Trigger>


                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>







        <Style x:Key="tb_style" TargetType="{x:Type ToggleButton}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type ToggleButton}">

                        <Border  x:Name="border"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 Background="{TemplateBinding Background}"
                                 SnapsToDevicePixels="True">

                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="true">

                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{ StaticResource tb_mouse_over}"/>

                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                            </Trigger>

                            <Trigger Property="IsChecked" Value="true">

                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>



        <Style x:Key="btt_style" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border  x:Name="border"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 Background="{TemplateBinding Background}"
                                 SnapsToDevicePixels="True">

                        </Border>



                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="true">




                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{ StaticResource tb_mouse_overB}"/>

                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">

                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{ StaticResource tb_mouse_overBc}"/>

                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_overBc}"/>

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>





















    </Application.Resources>

    <!--Input Bindings or Keyboard Shortcuts-->


</Application>
